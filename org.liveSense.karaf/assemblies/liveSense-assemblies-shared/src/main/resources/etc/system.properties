################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

#
# The properties defined in this file will be made available through system
# properties at the very beginning of the Karaf's boot process.
#


# Log level when the pax-logging service is not available
# This level will only be used while the pax-logging service bundle
# is not fully available.
# To change log levels, please refer to the org.ops4j.pax.logging.cfg file
# instead.
org.ops4j.pax.logging.DefaultServiceLog.level = ERROR

#
# Name of this Karaf instance.
#
karaf.name = livesense

#
# Default repository where bundles will be loaded from before using
# other Maven repositories.  For the full Maven configuration, see
# the org.ops4j.pax.url.mvn.cfg file.
#
karaf.default.repository = system

#
# Location of a shell script that will be run when starting a shell
# session.  This script can be used to create aliases and define
# additional commands.
#
karaf.shell.init.script = ${karaf.etc}/shell.init.script

#
# Sets the maximum size of the shell command history. If not set,
# defaults to 500 entries. Setting to 0 will disable history.
#
# karaf.shell.history.maxSize = 0

#
# Deletes the entire karaf.data directory at every start
#
karaf.clean.all = false

#
# Deletes the karaf.data/cache directory at every start
#
karaf.clean.cache = false

#
# Roles to use when logging into a local Karaf console.
#
# The syntax is the following:
#   [classname:]principal
# where classname is the class name of the principal object
# (defaults to org.apache.karaf.jaas.modules.RolePrincipal)
# and principal is the name of the principal of that class
# (defaults to instance).
#
karaf.local.roles = admin,manager,viewer

#
# Set this empty property to avoid errors when validating xml documents.
#
xml.catalog.files =

#
# Suppress the bell in the console when hitting backspace too many times
# for example
#
jline.nobell = true

#
# ServiceMix specs options
#
org.apache.servicemix.specs.debug = false
org.apache.servicemix.specs.timeout = 100

#
# Settings for the OSGi 4.3 Weaving
# By default, we will not weave any classes. Change this setting to include classes
# that you application needs to have woven.
#
org.apache.aries.proxy.weaving.enabled = none
# Classes not to weave - Aries default + Xerces which is known to have issues.
org.apache.aries.proxy.weaving.disabled = org.objectweb.asm.*,org.slf4j.*,org.apache.log4j.*,javax.*,org.apache.xerces.*

#
# By default, only Karaf shell commands are secured, but additional services can be
# secured by expanding this filter
#
karaf.secured.services = (&(osgi.command.scope=*)(osgi.command.function=*))

#
# Security properties
#
# To enable OSGi security, uncomment the properties below,
# install the framework-security feature and restart.
#
#java.security.policy=${karaf.etc}/all.policy
#org.osgi.framework.security=osgi
#org.osgi.framework.trust.repositories=${karaf.etc}/trustStore.ks

#
# Sling configuration
#
sling.launchpad=${karaf.home}/data

# The file contains default configuration for various framework settings. All
# settings configured here may be ammended or overwritten either using the
# FrameworkLauncherServlet.loadPropertiesOverride() method or web application
# initialization paramneters.
#
# Property values may contain references to other properties using the standard
# ${<prop-name>} syntax.

#
# Default home directory ("sling"). It is expected for this property to be
# overwritten by the "sling.home" init-param of the web application.
sling.home=${karaf.home}/data

#
# Default sling.context. The name of the default sling.context to use in the
# sling application. This value is mainly used to create default configurations
# for factory services and will be used to set the "sling.context" configuration
# property of such generated configurations.
sling.context.default = default

#
# The name of the JCR repository. Default is "jackrabbit".
# sling.repository.name = 

#
# The JCR repository home directory. Default is sling.home/sling.repository.name.
# sling.repository.home = 

#
# The JCR repository url config file (repository.xml). Default is repository.xml in
# bundle Embedded JCR Repository
# sling.repository.config.file.url = 


#
# Policy for the bundle parent classloaders used for boot delegation
# Possible values:
#   - boot -- Bootclass Loader; essentially same as "app" (default)
#   - ext  -- Extension Classloader; parent of "app"
#   - app  -- ClassLoader.getSystemClassLoader()
#   - framework -- Classloader loading the OSGi Framework classes
org.osgi.framework.bundle.parent = framework


#
# List of packages to append to the org.osgi.framework.system.packages property
# NOTE: If this is set, it must start with a comma !
# org.apache.sling.launcher.system.packages


#
# List of packages to append to the org.osgi.framework.bootdelegation property
# NOTE: If this is set, it must start with a comma !
# org.apache.sling.launcher.bootdelegation


#
# Include properties to install additional assemblies such as JCR support
# Core Sling etc.
sling.include.install = sling_install.properties


#
# Default Logging Configuration (see org.apache.sling.commons.log Bundle documentation)
# org.apache.sling.commons.log.intialize = true
org.apache.sling.commons.log.level = INFO
org.apache.sling.commons.log.file = ${sling.home}/logs/error.log
org.apache.sling.commons.log.file.number = 5
org.apache.sling.commons.log.file.size = '.'yyyy-MM-dd


#
# To enable the current server side debugging in the Rhino interpreter
# set the org.apache.sling.scripting.javascript.debug property to true.
# This will open a Swing window for Rhino JavaScript debugging on the
# server platform. Not setting this property or setting it to anything
# but true will disable this server-side debugger.
# org.apache.sling.scripting.javascript.debug = false

# Logging configuration for the SCR (if installed)
ds.loglevel = ${org.apache.sling.commons.log.level}

# Some Sling bundles depend on the non-standard functionality of Apache Felix
# SCR to create component factory instances based on factory configurations
# so we have to set the ds.factory.enabled property for the upcoming Apache
# Felix SCR release (and current 1.0.9-SNAPSHOT builds) to support this.
# see SLING-1136 for more details and references
ds.factory.enabled = true

#
# Space separated list of URLs to the OSGi Bundle Repository files.
# The referred to repository contains referrals to other repositories
# like the Apache Sling releases and the Apache Felix releases repositories
# obr.repository.url = http://sling.apache.org/obr/repository.xml

#
# Felix Configuration Admin File Persistence Configuration file directory
felix.cm.dir = ${sling.launchpad}/config

#
# Sling Installer file directory
sling.installer.dir = ${sling.launchpad}/installer

#
# Felix Framework profile directory. This is by default the "felix" directory
# below the application home directory.
org.osgi.framework.storage = ${sling.launchpad}/cache
 
#
# Default initial framework start level 
org.osgi.framework.startlevel.beginning=100

# Install and update initial framework start level
# This should be lower than the default initial framework start level
# During an install or update, the framework starts with this level
# and the startup manager increases the start level by one
# until the initial framework start level is reached.
# sling.framework.install.incremental=true
# sling.framework.install.startlevel=10

#
# Default start level for newly installed bundles not explicitly assigned
# a start level
#felix.startlevel.bundle=20

# Enable Felix URL handlers (see SLING-862)
#felix.service.urlhandlers=true

#
# Include JRE package list
#sling.include.jre = jre-${java.specification.version}.properties

#
# New-style generic execution environment capabilities.
#org.osgi.framework.system.capabilities= \
# ${eecap-${java.specification.version}}

#
# Deprecated old-style execution environment properties.
#org.osgi.framework.executionenvironment= \
# ${ee-${java.specification.version}}

#
# Framework system packages to be visible
#org.osgi.framework.system.packages= \
# ${osgi-core-packages}, \
# ${osgi-compendium-services}, \
# org.apache.sling.launchpad.api;version=1.1.0, \
# ${jre-${java.specification.version}} \
# ${org.apache.sling.launcher.system.packages}


# Boot delegation packages never included anywhere (usually sun.*,com.sun.*)
# We include com.yourkit here to allow profiling the servlet container in
# which the web app is running
# sun.* and/or com.sun.* may be included if there is code which - violating
# specs by Sun - directly calls into these packages.
# org.osgi.framework.bootdelegation=sun.*,com.sun.*
#org.osgi.framework.bootdelegation=com.yourkit.*, \
# ${org.apache.sling.launcher.bootdelegation}

#
# SLING-1925: boot delegate sun.reflect package 
#sling.bootdelegation.sun.reflect = sun.reflect

# JBoss XML factory package (SLING-2466)
#sling.bootdelegation.jboss = __redirected

# Oracle WebLogic XML factory support (SLING-2466)
#sling.bootdelegation.weblogic = weblogic.xml.*

# IBM WebSphere XML factory support (SLING-2466)
#sling.bootdelegation.ibm = com.ibm.xml.* 

#
# Package Specifications for org.osgi.framework.system.packages
#    osgi-core-packages       : OSGi Core Specification packages
#    osgi-compendium-services : OSGi Compendium Specification packages
#
# Note: These properties are actually prefixed with "sling." and are renamed
#       to their correct equivalen (without the "sling." prefix) when loading
#       the properties to launch the framework. This is done to be able to
#       overwrite the values from the sling.properties file in case of an
#       OSGi API update.

# Only provide the OSGi packages contained in the Felix framework itself
#sling.osgi-core-packages= \
# org.osgi.framework; version=1.6, \
# org.osgi.framework.hooks.bundle; version=1.0, \
# org.osgi.framework.hooks.resolver; version=1.0, \
# org.osgi.framework.hooks.service; version=1.1, \
# org.osgi.framework.hooks.weaving; version=1.0, \
# org.osgi.framework.launch; version=1.0, \
# org.osgi.framework.startlevel; version=1.0, \
# org.osgi.framework.wiring; version=1.0, \
# org.osgi.service.packageadmin; version=1.2, \
# org.osgi.service.startlevel; version=1.1, \
# org.osgi.service.url; version=1.0

# Only provide the tracker (from the felix framework) 
#sling.osgi-compendium-services= \
# org.osgi.util.tracker;version="1.5"
